def input_sudoku_board():
    board = []
    print("Enter the Sudoku board row by row. Use 0 for empty cells.")
    for i in range(9):
        while True:
            row = input(f"Enter row {i + 1} (9 digits, use 0 for empty cells): ")
            if len(row) == 9 and row.isdigit():
                board.append([int(digit) for digit in row])
                break
            else:
                print("Invalid input. Please enter exactly 9 digits.")
    return board

def find(board):
    for i in range(len(board)):  
        for j in range(len(board[0])):   
            if board[i][j] == 0:    
                return (i, j)
    return None
        
def isValid(board, row, col, no):
    for i in range(len(board[0])):   
        if board[row][i] == no:
            return False
    for j in range(len(board)):  
        if board[j][col] == no:
            return False
    startRow = 3 * (row // 3)    
    startCol = 3 * (col // 3)     
    for i in range(startRow, startRow + 3):  
        for j in range(startCol, startCol + 3):
            if board[i][j] == no:
                return False
    return True
         
def play(board):
    empty = find(board)
    if empty == None:
        return True
    i, j = empty
    for no in range(1, 10):
        if isValid(board, i, j, no):
            board[i][j] = no
            if play(board):    
                return True 
            board[i][j] = 0    
    return False
board = input_sudoku_board()
s = play(board)
if not s:
    print("Invalid Sudoku board")
else:
    print("Sudoku board solved:")
    for row in board:
        print(row)
